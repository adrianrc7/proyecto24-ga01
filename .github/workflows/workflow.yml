name: Compilación, Pruebas y Análisis con SonarQube
#1
on:
  push:
    branches:
      - "main"
      - "feature/Integracion-Continua"
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build-and-analyze:
    name: Build, Test and Analyze
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 12345

    steps:
      # Clona el repositorio
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Para mejor relevancia en el análisis de SonarQube

      # Configura Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
          cache: maven

      # Espera a que PostgreSQL esté listo
      - name: Wait for PostgreSQL to be ready
        run: |
          while ! pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done

      # Ejecutar scripts SQL
      - name: Execute SQL scripts to set up databases
        run: |
          export PGPASSWORD=12345
          psql -h localhost -U postgres -f User.sql
          psql -h localhost -U postgres -f Content.sql
          psql -h localhost -U postgres -f Visualization.sql

      # Construye y prueba microservicios
      - name: Build and test all microservices
        run: |
          for service in Visualization Content User; do
            cd $service
            mvn clean install
            mvn test
            cd ..
          done

      # Inicia microservicios
      - name: Run microservices
        run: |
          for service in Visualization Content User; do
            cd $service
            mvn spring-boot:run &
            cd ..
          done

      # Instalar Node.js para ejecutar pruebas de Postman
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Newman
        run: npm install -g newman

      # Ejecutar pruebas de Postman
      - name: Run Postman tests
        run: |
          for collection in tests/User.postman_collection.json tests/Content.postman_collection.json tests/Visualization.postman_collection.json; do
            newman run $collection
          done

      # Análisis con SonarQube
      - name: Analyze with SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=adrianrc7_proyecto24-ga01

      # Mensaje final
      - name: Completion Message
        run: echo "Todos los microservicios han sido compilados, probados y analizados exitosamente con SonarQube."

